//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add Foundational Module" recipe.
//
// The LayoutView usercontrol defines a layout decoupled from the shell. 
// It provides a left and right workspace, menu bar, tool bar and status bar.
// These ui elements are added as extension sites.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-290-Automation%20Add%20Foundational%20Module.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Threading;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.EventBroker;
using ACOT.Infrastructure.Interface;
using ACOT.Infrastructure.Interface.Services;
using System;
using System.Windows.Forms;


namespace ACOT.SettingsModule
{
    public class LayoutViewPresenter : Presenter<LayoutView>
    {
        public void OnCloseView()
        {
            base.CloseView();                        
        }

        public void OnCancel()
        {
            this.OnCloseView(); 
        }

        public void OnOK()
        {
            IContextService context = WorkItem.RootWorkItem.Services.Get<IContextService>();

            try
            {
                context.desktop = View.desktopTextBox.Text;
                context.menuTreeVisible = View.TreeCheckBox.Checked;
                context.Font = View.defaultFont;
                context.startupDir = View.acotFolderPath.Text;

                // уснанавливаем виимость дерева меню
                if (OnMenuTreeVisibleChange != null)
                    OnMenuTreeVisibleChange(this, new EventArgs<bool>(context.menuTreeVisible));
            }
            catch (Exception ex)
            {
                MessageBox.Show("Ошибка: " + ex.Message);
            }
   
        }

        [EventPublication(ACOT.Infrastructure.Interface.Constants.EventTopicNames.MenuTreeVisibleChange, PublicationScope.Global)]
        public event EventHandler<EventArgs<bool>> OnMenuTreeVisibleChange;
    }
}
