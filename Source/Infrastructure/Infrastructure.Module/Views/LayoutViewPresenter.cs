//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add Foundational Module" recipe.
//
// The LayoutView usercontrol defines a layout decoupled from the shell. 
// It provides a left and right workspace, menu bar, tool bar and status bar.
// These ui elements are added as extension sites.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.practices.scsf.2007may/SCSF/html/03-01-030-How_to_Create_a_Foundational_Module.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Threading;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.EventBroker;
using ACOT.Infrastructure.Interface;
using ACOT.Infrastructure.Interface.Services;


namespace ACOT.Infrastructure.Module
{
    public partial class LayoutViewPresenter : Presenter<ILayoutView>
    {
        private IContextService _context;

        [ServiceDependency]
        public IContextService Context
        {
            get { return _context; }
            set { _context = value; }
        }

        /// <summary>
        /// This method is a placeholder that will be called by the view when it has been loaded.
        /// </summary>
        public override void OnViewReady()
        {            
            base.OnViewReady();            
        }

        protected override void OnViewSet()
        {
            base.OnViewSet();

            this.View.Load += new System.EventHandler(View_Load);            
        }

        void View_Load(object sender, System.EventArgs e)
        {
            this.View.StartDir = Context.startupDir;
            if (Properties.Settings.Default.ShowSplash == false)            
                this.OnCloseView();                            
        }        

        /// <summary>
        /// Close the view
        /// </summary>
        public void OnCloseView()
        {            
                base.CloseView();
        }

        internal void OnSelectFolder()
        {
            if (this.View.FolderDlg.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                this.View.StartDir = this.View.FolderDlg.SelectedPath;                
                this.saveSettings();
            }
        }

        internal void saveSettings()
        {
            this.Context.startupDir = this.View.StartDir;
            this.Context.Save();
        }

        internal void Next()
        {            
            //if (!System.IO.File.Exists(Context.startupDir + "\\orgname"))
            //{
            //    System.Windows.Forms.MessageBox.Show("Не выбран каталог информационной базы!");
            //}
            //else
            this._context.RefreshOrganization();            
            this.OnCloseView();
        }

        internal void Exit()
        {
            this.saveSettings();
            System.Environment.Exit(0);
        }
    }
}
